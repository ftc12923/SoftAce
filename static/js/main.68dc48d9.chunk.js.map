{"version":3,"sources":["config/Fire.js","Components/HomeHeader.js","Components/SoftAceTeamHeader.js","Components/WhatSoftAce.js","Components/SignUpPage.js","Components/LoginPage.js","App.js","serviceWorker.js","index.js"],"names":["fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","HomeHeader","className","href","onClick","window","location","SoftAceTeamHeader","WhatSoftAce","SignUpPage","placeholder","type","LoginPage","App","props","state","user","this","authListener","auth","onAuthStateChanged","setState","path","Component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"sXAYiBA,E,OADFC,EAASC,cATD,CACnBC,OAAQ,0CACRC,WAAY,gCACZC,YAAa,uCACbC,UAAW,gBACXC,cAAe,4BACfC,kBAAmB,eACnBC,MAAO,8C,+DC6CIC,MAjDf,WAOI,OACI,yBAAKC,UAAU,cACX,yBAAKA,UAAU,4BACX,wBAAIA,UAAU,gBAAd,YAEJ,yBAAKA,UAAU,sCACX,uBAAGA,UAAU,yBAAyBC,KAAK,mBAA3C,sBAEJ,yBAAKD,UAAU,mCACX,uBAAGA,UAAU,sBAAsBC,KAAK,gBAAxC,iBAEJ,yBAAKD,UAAU,4BACX,uBAAGA,UAAU,eAAeC,KAAK,SAAjC,qBAEJ,yBAAKD,UAAU,+BACX,uBAAGA,UAAU,kBAAkBC,KAAK,YAApC,oBAGJ,yBAAKD,UAAU,2BACX,mEAGJ,yBAAKA,UAAU,oCACX,4BAAQA,UAAU,gBAAgBE,QA7B9C,WACIC,OAAOC,SAASH,KAAO,aA4Bf,cAEI,kBAAC,IAAD,CAAcD,UAAU,sBAGhC,yBAAKA,UAAU,+BACX,4BAAQA,UAAU,gBAAgBE,QAhC9C,WACIC,OAAOC,SAASH,KAAO,YA+Bf,QAEI,kBAAC,IAAD,CAAYD,UAAU,mB,MC5B3BK,MAZf,WACI,OACI,yBAAKL,UAAU,qBACX,yBAAKA,UAAU,4BACX,wBAAIA,UAAU,0BAAd,uB,2DC2DDM,MA5Df,WAII,OACI,yBAAKN,UAAU,eACX,yBAAKA,UAAU,yBACX,wBAAIA,UAAU,YAAd,SAEJ,yBAAKA,UAAU,yBACX,wBAAIA,UAAU,YAAd,OAEJ,yBAAKA,UAAU,2BACX,wBAAIA,UAAU,cAAd,aAEJ,yBAAKA,UAAU,6BACX,uBAAGA,UAAU,gBAAe,sGAEhC,yBAAKA,UAAU,4BACX,yBAAKA,UAAU,kCACX,kBAAC,IAAD,CAAYA,UAAU,0BACtB,wBAAIA,UAAU,qBAAoB,2DAGtC,yBAAKA,UAAU,sCACX,uBAAGA,UAAU,yBAAwB,u4BAI7C,yBAAKA,UAAU,6BACX,yBAAKA,UAAU,oCACX,kBAAC,IAAD,CAAeA,UAAU,+BACzB,wBAAIA,UAAU,sBAAqB,mDAEvC,yBAAKA,UAAU,wCACX,uBAAGA,UAAU,2BAA0B,4WAK/C,yBAAKA,UAAU,mCACX,yBAAKA,UAAU,gDACX,kBAAC,IAAD,CAAUA,UAAU,0BACpB,wBAAIA,UAAU,4BAA2B,gEAE7C,yBAAKA,UAAU,oDACX,uBAAGA,UAAU,gCAA+B,yhBAGpD,yBAAKA,UAAU,6CACX,yBAAKA,UAAU,gCACX,4BAAQA,UAAU,4BAA4BE,QAlD9D,WACIC,OAAOC,SAASH,KAAO,aAiDX,wB,MC5BLM,MA1Bf,WACI,OACI,yBAAKP,UAAU,cACX,yBAAKA,UAAU,2BACX,wBAAIA,UAAU,eAAc,oDAGhC,yBAAKA,UAAU,6BACX,2BAAOA,UAAU,gBAAgBQ,YAAY,UAEjD,yBAAKR,UAAU,0BACX,2BAAOA,UAAU,aAAaQ,YAAY,WAE9C,yBAAKR,UAAU,mCACX,2BAAOA,UAAU,sBAAsBQ,YAAY,0BAEvD,yBAAKR,UAAU,mCACX,2BAAOA,UAAU,sBAAsBS,KAAK,WAAWD,YAAY,0BAEvE,yBAAKR,UAAU,4BACX,4BAAQA,UAAU,0BAAlB,qB,MCADU,MApBf,WACI,OACI,yBAAKV,UAAU,aACX,yBAAKA,UAAU,6BACX,wBAAIA,UAAU,kBAAiB,2CAEnC,yBAAKA,UAAU,kCACX,2BAAOA,UAAU,sBAAsBQ,YAAY,cAEvD,yBAAKR,UAAU,sCACX,2BAAOA,UAAU,0BAA0BS,KAAK,WAAWD,YAAY,cAE3E,yBAAKR,UAAU,iCACX,4BAAQA,UAAU,sBAAlB,YC+EDW,E,kDAzEb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,KAAM,IAHS,E,gEASjBC,KAAKC,iB,qCAIS,IAAD,OACb3B,EAAK4B,OAAOC,oBAAmB,SAACJ,GAE3BA,EACD,EAAKK,SAAS,CAAEL,SAGhB,EAAKK,SAAS,CAAEL,KAAM,Y,+BAU1B,OACE,kBAAC,IAAD,KACE,yBAAKd,UAAU,OACb,kBAAC,IAAD,KAEC,kBAAC,IAAD,CAAOoB,KAAK,UACV,kBAAC,EAAD,OAGF,kBAAC,IAAD,CAAOA,KAAK,WACV,kBAAC,EAAD,OAGF,kBAAC,IAAD,CAAOA,KAAK,iBAGZ,kBAAC,IAAD,CAAOA,KAAK,oBAGZ,kBAAC,IAAD,CAAOA,KAAK,aAGZ,kBAAC,IAAD,CAAOA,KAAK,SACV,kBAAC,EAAD,OAGF,kBAAC,IAAD,CAAOA,KAAK,eACZ,kBAAC,IAAD,CAAOA,KAAK,KACZ,kBAAC,EAAD,MACA,kBAAC,EAAD,c,GA5DOC,aCTEC,QACW,cAA7BnB,OAAOC,SAASmB,UAEe,UAA7BpB,OAAOC,SAASmB,UAEhBpB,OAAOC,SAASmB,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.68dc48d9.chunk.js","sourcesContent":["import firebase from 'firebase'; \r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCqpo099kBoLzYcReGOvINYYwMY3zmv0WI\",\r\n    authDomain: \"softace-e82ef.firebaseapp.com\",\r\n    databaseURL: \"https://softace-e82ef.firebaseio.com\",\r\n    projectId: \"softace-e82ef\",\r\n    storageBucket: \"softace-e82ef.appspot.com\",\r\n    messagingSenderId: \"577942687286\",\r\n    appId: \"1:577942687286:web:169e08394097fb1daa9297\"\r\n  };\r\n  const fire = firebase.initializeApp(firebaseConfig);\r\n  export default fire; ","import React from 'react'; \r\nimport './HomeHeader.css'; \r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport VpnKeyIcon from '@material-ui/icons/VpnKey';\r\n\r\nfunction HomeHeader() {\r\n    function againgettingStarted() {\r\n        window.location.href = './signup'; \r\n    }\r\n    function logingIn() {\r\n        window.location.href = './login'; \r\n    }\r\n    return (\r\n        <div className=\"homeheader\">\r\n            <div className=\"homeheader__softacetitle\">\r\n                <h1 className=\"softacetitle\">SoftAce</h1>\r\n            </div>\r\n            <div className=\"homeheader__softacemockinterviewsa\">\r\n                <a className=\"softacemockinterviewsa\" href=\"/mockinterviews\">Coding Interviews</a>\r\n            </div>\r\n            <div className=\"homeheader__softacelivestreamsa\">\r\n                <a className=\"softacelivestreamsa\" href=\"/livestreams\">Live Streams</a>\r\n            </div>\r\n            <div className=\"homeheader__softaceteama\">\r\n                <a className=\"softaceteama\" href=\"/team\">The SoftAce Team</a>\r\n            </div>\r\n            <div className=\"homeheader__softacepreviewa\">\r\n                <a className=\"softacepreviewa\" href=\"/preview\">SoftAce Preview</a>\r\n            </div>\r\n\r\n            <div className=\"homeheader__softacedesc\">\r\n                <h3>Host your remote coding interviews</h3>\r\n            </div>\r\n\r\n            <div className=\"homeheader__softacegetstartedbtn\">\r\n                <button className=\"getstartedbtn\" onClick={againgettingStarted}>\r\n                    Get Started\r\n                    <CheckBoxIcon className=\"checkboxiconget\"/>\r\n                </button>\r\n            </div>\r\n            <div className=\"homeheader__softaceloginbtn\">\r\n                <button className=\"loginstartbtn\" onClick={logingIn}>\r\n                    Login\r\n                    <VpnKeyIcon className=\"vpnkeyicon\"/>\r\n\r\n                </button>\r\n            </div>\r\n\r\n            \r\n            \r\n        </div>\r\n    ); \r\n}\r\n\r\nexport default HomeHeader; ","import React from 'react'; \r\nimport './SoftAceTeamHeader.css'; \r\n\r\nfunction SoftAceTeamHeader() {\r\n    return(\r\n        <div className=\"softaceteamheader\">\r\n            <div className=\"softaceteamheader__title\">\r\n                <h1 className=\"softaceteamheadertitle\">The SoftAce Team</h1>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    ); \r\n}\r\n\r\nexport default SoftAceTeamHeader; ","import React from 'react'; \r\nimport './WhatSoftAce.css'; \r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport VideoCallIcon from '@material-ui/icons/VideoCall';\r\nimport CodeIcon from '@material-ui/icons/Code'; \r\n\r\nfunction WhatSoftAce() {\r\n    function gettingStarted() {\r\n        window.location.href = './signup'; \r\n    }\r\n    return (\r\n        <div className=\"whatsoftace\">\r\n            <div className=\"whatsoftace__titleone\">\r\n                <h1 className=\"titleone\">What</h1>\r\n            </div>\r\n            <div className=\"whatsoftace__titletwo\">\r\n                <h1 className=\"titletwo\">is</h1>\r\n            </div>\r\n            <div className=\"whatsoftace__titlethree\">\r\n                <h1 className=\"titlethree\">SoftAce?</h1>\r\n            </div>\r\n            <div className=\"whatsoftace__abtparagraph\">\r\n                <p className=\"abtparagraph\"><center>A platform to host your remote coding interviews, for no charge!</center></p>\r\n            </div>\r\n            <div className=\"whatsoftace__findusersad\">\r\n                <div className=\"findusersad__findusersadheader\">\r\n                    <PersonIcon className=\"randompersoniconagain\"/>\r\n                    <h2 className=\"findusersadheader\"><center>Interviews with users</center></h2>\r\n                    \r\n                </div>\r\n                <div className=\"findusersad__findusersadmiddletext\">\r\n                    <p className=\"findusersadmiddletext\"><center>Through SoftAce, you are able to schedule remote coding interviews or mock coding interviews in the Coding Interviews section of SoftAce where when you would like to schedule an interview, you will be asked wether this is a mock interview or an actual interview, you will have to select if you will be the interviewer or the interviewee, type in the coding problem(s), select the language you would prefer the solution to be coded in, and select the difficulty of the interview in general. If your interview is not a mock interview, you will be asked to invite the interviewee to this interview. If this is a mock interview, then what happens is if you are an interviewee, you will be matched with potential interviewers on this app you can have a mock interview with, if you are an interviewer, your interview will be there for potential mock interviewees' to see</center></p>\r\n                </div>\r\n\r\n            </div>\r\n            <div className=\"whatsoftace__videocallsad\">\r\n                <div className=\"videocallsad__videocallsadheader\">\r\n                    <VideoCallIcon className=\"anotherrandomvideocallicon\"/>\r\n                    <h2 className=\"videocallsadheader\"><center>Video Calling</center></h2>\r\n                </div>\r\n                <div className=\"videocallsad__videocallsadmiddletext\">\r\n                    <p className=\"videocallsaddmiddletext\"><center>SoftAce's video calling feature is very high quality and is the best to use for remote interviews. You are able to see your interviewee or interviewer face to face in HD quality for better communication during the interview! You also have options to turn off your camera, mute, leave the call, or keep the interview on pause.</center></p>\r\n                </div>\r\n                \r\n\r\n            </div>\r\n            <div className=\"whatsoftace__codeexecutionenvad\">\r\n                <div className=\"codeexecutionenvad__codeexecutionenvadheader\">\r\n                    <CodeIcon className=\"anotherrandomcodeicon\"/>\r\n                    <h2 className=\"codeexecutionenvadheader\"><center>Code-Execution Environment</center></h2>\r\n                </div>\r\n                <div className=\"codeexecutionenvad__codeexecutionenvadmiddletext\">\r\n                    <p className=\"codeexecutionenvadmiddletext\"><center>SoftAce's Code Execution enviroment is one of the best! With its high quality performance and its outstanding user interface, the interviewer is able to share the code-execution environment with their interviewee and are able to use that to code the solution to the coding problem given in the interview! The coding problem has been typed before when creating the interview and gets embedded into the Code-Execution environment so that the problem is ready for you by the time the interview starts!</center></p>\r\n                </div>\r\n            </div>\r\n            <div className=\"whatsoftace__somemoregettingstartedbutton\">\r\n                <div className=\"somemoregettingstartedbutton\">\r\n                    <button className=\"gettingstartedbuttonagain\" onClick={gettingStarted}>Get Started Now!</button>\r\n                </div>\r\n            </div>\r\n            \r\n\r\n        </div>\r\n    ); \r\n}\r\n\r\nexport default WhatSoftAce; ","import React from 'react'; \r\nimport './SignUpPage.css'; \r\n\r\nfunction SignUpPage() {\r\n    return (\r\n        <div className=\"signuppage\">\r\n            <div className=\"signuppage__signuptitle\">\r\n                <h1 className=\"signuptitle\"><center>Create Account</center></h1>\r\n                \r\n            </div>  \r\n            <div className=\"signuppage__fullnameinput\">\r\n                <input className=\"fullnameinput\" placeholder=\"Name\"/>\r\n            </div> \r\n            <div className=\"signuppage__emailinput\">\r\n                <input className=\"emailinput\" placeholder=\"Email\"/>\r\n            </div>\r\n            <div className=\"signuppage__createusernameinput\">\r\n                <input className=\"createusernameinput\" placeholder=\"Create your username\"/>\r\n            </div>\r\n            <div className=\"signuppage__createpasswordinput\">\r\n                <input className=\"createpasswordinput\" type=\"password\" placeholder=\"Create your password\" />\r\n            </div>\r\n            <div className=\"signuppage__finishbutton\">\r\n                <button className=\"signuppagefinishbutton\">Create Account</button>\r\n            </div>\r\n        </div>\r\n    ); \r\n}\r\n\r\nexport default SignUpPage; ","import React from 'react'; \r\nimport './LoginPage.css'; \r\n\r\nfunction LoginPage() {\r\n    return (\r\n        <div className=\"loginpage\">\r\n            <div className=\"loginpage__loginpagetitle\">\r\n                <h1 className=\"loginpagetitle\"><center>Login</center></h1>\r\n            </div>\r\n            <div className=\"loginpage__actualusernameinput\">\r\n                <input className=\"actualusernameinput\" placeholder=\"Username\"/>\r\n            </div>\r\n            <div className=\"loginpage__actualuserpasswordinput\">\r\n                <input className=\"actualuserpasswordinput\" type=\"password\" placeholder=\"Password\"/>\r\n            </div>\r\n            <div className=\"loginpage__getinaccountbutton\">\r\n                <button className=\"getinaccountbutton\">Login</button>\r\n            </div>\r\n\r\n        </div>\r\n    ); \r\n}\r\n\r\nexport default LoginPage; ","import React from 'react';\nimport {Component} from 'react'; \nimport fire from './config/Fire'; \nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route, \n  Link \n} from \"react-router-dom\";  \nimport './App.css'; \nimport HomeHeader from './Components/HomeHeader'; \nimport SoftAceTeamHeader from './Components/SoftAceTeamHeader';\nimport WhatSoftAce from './Components/WhatSoftAce'; \nimport SignUpPage from './Components/SignUpPage'; \nimport LoginPage from './Components/LoginPage';\n\n \n\n\n \n\nclass App extends Component{\n  constructor(props) {\n    super(props); \n    this.state = {\n      user: {}, \n\n    }\n  }\n\n  componentDidMount(){\n    this.authListener(); \n  }\n\n\n  authListener() {\n    fire.auth().onAuthStateChanged((user) => {\n      //console.log(user); \n      if(user) {\n        this.setState({ user }); \n        //localStorage.setItem('user', user.uid); \n      } else {\n        this.setState({ user: null });\n        //localStorage.removeItem('user');  \n\n      }\n\n    })\n  }\n\n\n  render() {\n    return (\n      <Router>\n        <div className=\"app\">\n          <Switch>\n          \n           <Route path=\"/login\">\n             <LoginPage />\n            \n           </Route>\n           <Route path=\"/signup\">\n             <SignUpPage />\n  \n           </Route>\n           <Route path=\"/livestreams\">\n  \n           </Route> \n           <Route path=\"/mockinterviews\">\n  \n           </Route>\n           <Route path=\"/preview\">\n  \n           </Route>\n           <Route path=\"/team\">\n             <SoftAceTeamHeader />\n  \n           </Route>\n           <Route path=\"/dashboard\"></Route>\n           <Route path=\"/\">  \n           <HomeHeader />\n           <WhatSoftAce />\n           </Route>  \n          </Switch>\n        </div>\n  \n      </Router>\n      \n    );\n    \n  }\n  \n  \n} \n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}